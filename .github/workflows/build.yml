name: build and push image

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Setup
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # Envs
      - name: Set RELEASE_VERSION env
        run: echo "RELEASE_VERSION=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV
      - name: Set IMAGE_REPO env
        run: echo "IMAGE_REPO=pms-docker" >> $GITHUB_ENV
      - name: Set DOCKER_USER env
        run: echo "DOCKER_USER=gpoleze" >> $GITHUB_ENV
      # Actions
      - name: login to docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: build the arm64 image
        run: |
          docker buildx build --push \
            --tag ${DOCKER_USER}/${IMAGE_REPO}:arm64v8-latest \
            --tag ${DOCKER_USER}/${IMAGE_REPO}:arm64v8-$RELEASE_VERSION \
            --platform linux/arm64 \
            -f Dockerfile.arm64 .
      - name: build the adm64 image
        run: |
          docker buildx build --push \
            --tag ${DOCKER_USER}/${IMAGE_REPO}:amd64-latest \
            --tag ${DOCKER_USER}/${IMAGE_REPO}:amd64-$RELEASE_VERSION \
            --platform linux/amd64 \
            -f Dockerfile .
      - name: conciliate images to multi-arch to latest
        run: |
          docker manifest create                            \
            ${DOCKER_USER}/${IMAGE_REPO}:latest             \
            ${DOCKER_USER}/${IMAGE_REPO}:amd64-latest       \
            ${DOCKER_USER}/${IMAGE_REPO}:arm64v8-latest     \
          && docker manifest annotate                       \
            ${DOCKER_USER}/${IMAGE_REPO}:latest             \
            ${DOCKER_USER}/${IMAGE_REPO}:arm64v8-latest     \
            --os linux --arch arm64 --variant v8            \
          && docker manifest push --purge ${DOCKER_USER}/${IMAGE_REPO}:latest
      - name: conciliate images to multi-arch fo release version
        run: |
          docker manifest create                                      \
            ${DOCKER_USER}/${IMAGE_REPO}:${$RELEASE_VERSION}          \
            ${DOCKER_USER}/${IMAGE_REPO}:amd64-${$RELEASE_VERSION}    \
            ${DOCKER_USER}/${IMAGE_REPO}:arm64v8-${$RELEASE_VERSION}  \
          && docker manifest annotate                                 \
            ${DOCKER_USER}/${IMAGE_REPO}:${$RELEASE_VERSION}          \
            ${DOCKER_USER}/${IMAGE_REPO}:arm64v8-${$RELEASE_VERSION}  \
            --os linux --arch arm64 --variant v8                      \
          && docker manifest push --purge ${DOCKER_USER}/${IMAGE_REPO}:${$RELEASE_VERSION}